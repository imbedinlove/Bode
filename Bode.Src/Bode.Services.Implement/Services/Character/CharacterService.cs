// <autogenerated>
//   This file was generated by T4 code generator ServicesCodeScript.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Linq;
using OSharp.Core;
using OSharp.Core.Data;
using OSharp.Utility;
using OSharp.Utility.Data;
using OSharp.Utility.Extensions;
using System.Linq.Expressions;
using System.Threading.Tasks;

using Bode.Services.Core.Contracts;
using Bode.Services.Core.Dtos.Character;
using Bode.Services.Core.Models.Character;
using Bode.Services.Core.Models.User;
using Bode.Services.Implement.Helper;

namespace Bode.Services.Implement.Services
{
    public partial class CharacterService : ICharacterContract
    {
        public IRepository<UserInfo, int> UserInfoRepo { protected get; set; }

        /// <summary>
        /// 保存用户设置标签
        /// </summary>
        /// <param name="userId">用户ID</param>
        /// <param name="ids">用户设置的标签ID</param>
        /// <returns></returns>
        public OperationResult SaveLabels(int userId, int[] ids)
        {
            ids.CheckNotNull("ids");

            var user = UserInfoRepo.GetByKey(userId);
            if (user == null)
            {
                return BodeResult.ValidError("用户不存在");
            }
            user.Labels = LabelRepo.GetByPredicate(m => ids.Contains(m.Id)).ToList();
            return UserInfoRepo.Update(user) == 0 ? BodeResult.NoChanged() : BodeResult.Success();
        }
    }
}
